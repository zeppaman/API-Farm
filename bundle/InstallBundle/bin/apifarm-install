#!/usr/bin/env php
<?php

namespace Apifarm\Installer;

use Apifarm\InstallBundle\InstallKernel;
use LogicException;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\ErrorHandler\Debug;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use  Apifarm\InstallBundle\Command\ConfigCommand;



if (!in_array(PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
  echo 'Warning: The console should be invoked via the CLI version of PHP, not the '.PHP_SAPI.' SAPI'.PHP_EOL;
}

set_time_limit(0);

if (file_exists($a = getcwd() . '/vendor/autoload.php')) {
  require $a;
  $projectRoot = getcwd();
} elseif (file_exists($a = __DIR__ . '/../../../../vendor/autoload.php')) {
  require $a;
  $projectRoot = __DIR__ . '/../../../..';
} elseif (file_exists($a = __DIR__ . '/../autoload.php')) {
  require $a;
  $projectRoot = '/..';
} else {
  fwrite(STDERR, 'Cannot locate autoloader; please run "composer install"' . PHP_EOL);
  exit(1);
}

if (!class_exists(Application::class) || !class_exists(Dotenv::class)) {
  throw new LogicException('You need to add "symfony/framework-bundle" and "symfony/dotenv" as Composer dependencies.');
}

$_SERVER['APP_ENV']='dev';

$input = new ArgvInput();
if (null !== $env = $input->getParameterOption(['--env', '-e'], null, true)) {
  putenv('APP_ENV='.$_SERVER['APP_ENV'] = $_ENV['APP_ENV'] = $env);
}



if(file_exists(dirname(__DIR__).'/.env'))
{
  (new Dotenv())->bootEnv(dirname(__DIR__).'/.env');
}

$kernel = new InstallKernel('dev', false);
$application = new Application($kernel);
$command=new ConfigCommand();
$command->setRootFolder(getcwd());
$application->addCommands([$command]);
$application->run($input);